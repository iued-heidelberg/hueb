version: "3.8"

services:
  hueb:
    image: ghcr.io/bockstaller/hueb_app:${TAG}
    depends_on:
      - database
      - proxy
    volumes:
      - data_directory:/data
    environment:
      - ENV=${ENV}
      - DEBUG=${DEBUG}
      - STATIC_DIR=${STATIC_DIR}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}

      - HONEYCOMB_API_KEY=${HONEYCOMB_API_KEY}
      - SENTRY_API_KEY=${SENTRY_API_KEY}
      - SECRET_KEY=${SECRET_KEY}

      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=database
      - DB_PORT=${DB_PORT}
    restart: always
    networks:
      - proxy_network
      - db_network

  proxy:
    image: nginx:latest
    volumes:
      - ${NGINX_CONF}:/etc/nginx/nginx.conf
      - /etc/letsencrypt/:/etc/letsencrypt/
    ports:
      - 80:80
      - 443:443
    restart: always
    networks:
      - proxy_network

  database:
    image: ghcr.io/bockstaller/hueb_db:${TAG}
    build:
      context: ./postgres/
      dockerfile: Dockerfile
    environment:
      - PGUSER=${DB_USER}
      - PGPASSWORD=${DB_PASSWORD}
      - PGDATABASE=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - database-data:/var/lib/postgresql/data/ # persist data even if container shuts down
      - ${BACKUP_DIR}:/backup
    restart: always
    ports:
      - 127.0.0.1:${HOST_PG_PORT}:5432
    networks:
      - db_network
      - proxy_network

networks:
  proxy_network:
  db_network:

volumes:
  database-data:
  data_directory:
