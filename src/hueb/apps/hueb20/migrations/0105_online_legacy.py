# Generated by Django 3.0.5 on 2020-07-09 21:55

import csv

from django.db import migrations
from hueb.apps.hueb20.models import LEGACY

# Legacy import
# loop over the rows in the excel file
# Look for the entry in legacy with the same title as the title in the row
# when found->fill the entry online ausgabe to the online filing (?)
# save the doc updated


def complete_legacy_online_filings(apps, schema_editor):
    Filing = apps.get_model("hueb20", "Filing")
    Document = apps.get_model("hueb20", "Document")
    Archive = apps.get_model("hueb20", "Archive")
    Comment = apps.get_model("hueb20", "Comment")
    with open(
        "./hueb/apps/hueb20/migrations/data/HUEB_UEbersetzungen_(legacy)_Juni.csv"
    ) as f:
        reader = csv.reader(f, delimiter="\t")
        next(reader)
        for row in reader:
            legacy_id = int(row[0])
            online_link = row[11]
            if online_link:
                if Document.objects.filter(translation_ref_legacy=legacy_id).exists():
                    document = Document.objects.get(translation_ref_legacy=legacy_id)
                    if row[2] not in document.title:
                        if document.title not in row[2]:
                            raise Exception(
                                f"Documents matched by ID {row[0]} do not have the same Title"
                            )
                    if (
                        Archive.objects.get(name="Online-Version")
                        not in document.located_in.all()
                    ):
                        new_filing = Filing()
                        new_filing.app = LEGACY
                        new_filing.archive = Archive.objects.get(name="Online-Version")
                        new_filing.document = document
                        new_filing.link = online_link
                        try:
                            new_filing.save()
                        except Exception:
                            raise Exception(
                                "Link is too long (more than 1023 characters)"
                            )

                    if row[12]:
                        comment = Comment()
                        comment.text = row[-1]
                        comment.extern = False
                        comment.document = document
                        comment.app = LEGACY
                        comment.save()


def unload_online_filings(apps, schema_editor):
    pass


class Migration(migrations.Migration):
    dependencies = [
        ("hueb20", "0104_ddc_english"),
    ]

    operations = [
        migrations.RunPython(complete_legacy_online_filings, unload_online_filings)
    ]
